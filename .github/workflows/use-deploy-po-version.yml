# Distributed under the OSI-approved BSD 3-Clause License.
# See accompanying file LICENSE.txt for details.

name: use-deploy-po-version

on:
  workflow_call:
    inputs:
      ENABLE:
        type: string
        required: false
        default: 'true'
        description: >
          [Optional] Whether to enable the job (e.g., 'true' or 'false'). Defaults to 'true'.
      RUNNER:
        type: string
        required: false
        default: 'ubuntu-latest'
        description: >
          [Optional] The runner image for executing the job. Defaults to 'ubuntu-latest'.
      CHECKOUT:
        type: string
        required: false
        default: '${{ github.ref }}'
        description: >
          [Optional] The git reference to be checked out. Defaults to '\$\{\{ github.ref \}\}'
      CMAKE_VERSION:
        type: string
        required: false
        default: ''
        description: >
          [Optional] The version of the CMake command. Defaults to an empty string.
      VERSION:
        type: string
        required: true    # [Required]
        description: >
          [Required] The version of the documentation.
      DEPLOY_RTD:
        type: string
        required: true    # [Required]
        description: >
          [Required] Whether to create RTD symbols for deployment (e.g., 'true' or 'false').
      ACTOR_NAME:
        type: string
        required: true    # [Required]
        description: >
          [Required] The user name of the GitHub actor.
      ACTOR_EMAIL:
        type: string
        required: true    # [Required]
        description: >
          [Required] The user email of the GitHub actor.
    secrets:
      ACTOR_GITHUB_TOKEN:
        required: true    # [Required]
        description: >
          [Required] The personal access token of the GitHub actor.

jobs:
  deploy-po-version:
    if: ${{ inputs.ENABLE == 'true' }}
    runs-on: ${{ inputs.RUNNER }}
    steps:
      - name: Print Contexts/Inputs/Secrets
        shell: bash
        run: |
          echo "[Contexts]"
          echo "github.job = ${{ github.job }}"
          echo "github.ref = ${{ github.ref }}"
          echo "github.ref_name = ${{ github.ref_name }}"
          echo "github.event_name = ${{ github.event_name }}"
          echo "github.event.action = ${{ github.event.action }}"
          echo "github.event.number = ${{ github.event.number }}"
          echo "github.workflow = ${{ github.workflow }}"
          echo "github.workflow_ref = ${{ github.workflow_ref }}"
          echo "github.run_id = ${{ github.run_id }}"
          echo "github.run_number = ${{ github.run_number }}"
          echo "github.run_attempt = ${{ github.run_attempt }}"
          echo "github.server_url = ${{ github.server_url }}"
          echo "github.repository = ${{ github.repository }}"
          echo "github.workspace = ${{ github.workspace }}"
          echo "[Inputs]"
          echo "inputs.ENABLE = ${{ inputs.ENABLE }}"
          echo "inputs.RUNNER = ${{ inputs.RUNNER }}"
          echo "inputs.CHECKOUT = ${{ inputs.CHECKOUT }}"
          echo "inputs.CMAKE_VERSION = ${{ inputs.CMAKE_VERSION }}"
          echo "inputs.VERSION = ${{ inputs.VERSION }}"
          echo "inputs.DEPLOY_RTD = ${{ inputs.DEPLOY_RTD }}"
          echo "inputs.ACTOR_NAME = ${{ inputs.ACTOR_NAME }}"
          echo "inputs.ACTOR_EMAIL = ${{ inputs.ACTOR_EMAIL }}"
          echo "[Secrets]"
          echo "secrets.ACTOR_GITHUB_TOKEN = ${{ secrets.ACTOR_GITHUB_TOKEN }}"

      - name: Checkout to '${{ inputs.CHECKOUT }}'
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.CHECKOUT }}
          token: ${{ secrets.ACTOR_GITHUB_TOKEN }}
          submodules: true

      - name: Install CMake
        uses: ltdorgtest/ci-common/.github/actions/install-cmake@main
        with:
          cmake-version: ${{ inputs.CMAKE_VERSION }}

      - name: Configure with 'all' preset for '${{ inputs.VERSION }}' version
        uses: ltdorgtest/ci-common/.github/actions/cmake-configure@main
        with:
          config-preset: 'all'
          cache-version: ${{ inputs.VERSION }}

      - name: Build the 'create_rtd_symlinks' target
        if: ${{ inputs.DEPLOY_RTD == 'true' }}
        uses: ltdorgtest/ci-common/.github/actions/cmake-build-target@main
        with:
          build-directory: out/build/all
          build-target: 'create_rtd_symlinks'

      - name: Remove 'l10n/${{ inputs.VERSION }}/locale/pot' directory
        run: |
          cd ${{ github.workspace }}
          cmake -E rm -rf l10n/${{ inputs.VERSION }}/locale/pot

      - name: Deploy to the 'po/${{ inputs.VERSION }}' branch
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: 'po/${{ inputs.VERSION }}'
          folder: './l10n/${{ inputs.VERSION }}/locale'
          target-folder: '.'
          single-commit: true
          clean: true
          git-config-name: ${{ inputs.ACTOR_NAME }}
          git-config-email: ${{ inputs.ACTOR_EMAIL }}
          token: ${{ secrets.ACTOR_GITHUB_TOKEN }}
