# Distributed under the OSI-approved BSD 3-Clause License.
# See accompanying file LICENSE-BSD for details.

name: cmake-configure

description: Configure the CMake Project

inputs:
  working-directory:
    required: false
    default: '${{ github.workspace }}'
    description: >
      [Optional] The directory from which to run commands or locate files. Defaults to '\$\{\{ github.workspace \}\}'.
  source-directory:
    required: false
    default: '[default]'
    description: >
      [Optional] The source directory of the CMake project. Defaults to '[default]'.
  build-directory:
    required: false
    default: '[default]'
    description: >
      [Optional] The build directory of the CMake project. Defaults to '[default]'.
  config-preset:
    required: false
    default: '[default]'
    description: >
      [Optional] The name of the CMake preset to use. Defaults to '[default]'.
  cache-version:
    required: false
    default: '[default]'
    description: >
      [Optional] The value for the VERSION cache entry. Defaults to '[default]'.
  cache-version-compendium:
    required: false
    default: '[default]'
    description: >
      [Optional] The value for the VERSION_COMPENDIUM cache entry. Defaults to '[default]'.
  cache-auto-depend:
    required: false
    default: '[default]'
    description: >
      [Optional] The value for the AUTO_DEPEND cache entry. Defaults to '[default]'.
  cache-remove-redundant:
    required: false
    default: '[default]'
    description: >
      [Optional] The value for the REMOVE_REDUNDANT cache entry. Defaults to '[default]'.
  cache-mode-of-update:
    required: false
    default: '[default]'
    description: >
      [Optional] The value for the MODE_OF_UPDATE cache entry. Defaults to '[default]'.
  cache-mode-of-install:
    required: false
    default: '[default]'
    description: >
      [Optional] The value for the MODE_OF_INSTALL cache entry. Defaults to '[default]'.
  cache-baseurl-href:
    required: false
    default: '[default]'
    description: >
      [Optional] The value for the BASEURL_HREF cache entry. Defaults to '[default]'.
  cache-version-of-python:
    required: false
    default: '[default]'
    description: >
      [Optional] The value for the VERSION_OF_PYTHON cache entry. Defaults to '[default]'.
  cache-version-of-sphinx:
    required: false
    default: '[default]'
    description: >
      [Optional] The value for the VERSION_OF_SPHINX cache entry. Defaults to '[default]'.
  cache-version-of-doxygen:
    required: false
    default: '[default]'
    description: >
      [Optional] The value for the VERSION_OF_DOXYGEN cache entry. Defaults to '[default]'.
  cache-version-of-proj:
    required: false
    default: '[default]'
    description: >
      [Optional] The value for the VERSION_OF_PROJ cache entry. Defaults to '[default]'.
  cache-sphinx-builder:
    required: false
    default: '[default]'
    description: >
      [Optional] The value for the SPHINX_BUILDER cache entry. Defaults to '[default]'.
  cache-sphinx-job-number:
    required: false
    default: '[default]'
    description: >
      [Optional] The value for the SPHINX_JOB_NUMBER cache entry. Defaults to '[default]'.
  cache-sphinx-verbose-level:
    required: false
    default: '[default]'
    description: >
      [Optional] The value for the SPHINX_VERBOSE_LEVEL cache entry. Defaults to '[default]'.
  cache-sphinx-gettext-compact:
    required: false
    default: '[default]'
    description: >
      [Optional] The value for the SPHINX_GETTEXT_COMPACT cache entry. Defaults to '[default]'.
  cache-sphinx-gettext-targets:
    required: false
    default: '[default]'
    description: >
      [Optional] The value for the SPHINX_GETTEXT_TARGETS cache entry. Defaults to '[default]'.
  cache-gettext-wrap-width:
    required: false
    default: '[default]'
    description: >
      [Optional] The value for the GETTEXT_WRAP_WIDTH cache entry. Defaults to '[default]'.

runs:
  using: composite
  steps:
    - name: Get CMAKE_ARGS by Inputs
      shell: bash
      id: cmake-args
      run: |
        # Remove the possible '\r' in array generated by jq. (for Windows Bash)
        # See: https://github.com/jqlang/jq/issues/92#issuecomment-350754078
        INPUTS_JSON=$(echo '${{ toJSON(inputs) }}' | jq -c)
        INPUTS_KEYS=$(echo "${INPUTS_JSON}" | jq -r 'keys[]' | tr -d '\r')
        CMAKE_ARGS=()
        for KEY in ${INPUTS_KEYS}; do
          VALUE=$(echo "${INPUTS_JSON}" | jq -r --arg key "${KEY}" '.[$key]')
          CMAKE_ARG=""
          if [[ "${KEY}" == "source-directory" ]]; then
            if [[ "${VALUE}" != "[default]" ]]; then
              CMAKE_ARG="-S=${VALUE}"
            fi
          elif [[ "${KEY}" == "build-directory" ]]; then
            if [[ "${VALUE}" != "[default]" ]]; then
              CMAKE_ARG="-B=${VALUE}"
            fi
          elif [[ "${KEY}" == "config-preset" ]]; then
            if [[ "${VALUE}" != "[default]" ]]; then
              CMAKE_ARG="--preset=${VALUE}"
            fi
          elif [[ "${KEY}" =~ ^cache- ]]; then
            if [[ "${VALUE}" != "[default]" ]]; then
              # Convert lowercase to uppercase by tr since BSD-sed cannot support '\U'. (for macOS bash)
              # See: https://stackoverflow.com/questions/4569825#4581564
              CACHE_NAME=$(echo "${KEY}" | sed 's/^cache-//' | tr '[:lower:]' '[:upper:]' | sed 's/-/_/g')
              CACHE_VALUE=${VALUE}
              CMAKE_ARG="-D${CACHE_NAME}=${CACHE_VALUE}"
            fi
          fi
          CMAKE_ARGS+=($CMAKE_ARG)
        done
        echo "CMAKE_ARGS=${CMAKE_ARGS[@]}" >> ${GITHUB_OUTPUT}
        echo "CMAKE_ARGS:"
        echo "${CMAKE_ARGS[@]}"

    - name: Configure the CMake Project (Windows)
      if: ${{ runner.os == 'Windows' }}
      shell: cmd
      run: |
        WORKING_DIRECTORY="${{ inputs.working-directory }}"
        set CMAKE_ARGS=${{ steps.cmake-args.outputs.CMAKE_ARGS }}

        echo Configuring the project...
        echo.
        echo cd %WORKING_DIRECTORY%
        echo.
        cd %WORKING_DIRECTORY%

        echo Configuring the project...
        echo.
        echo cmake %CMAKE_ARGS%
        echo.
        cmake %CMAKE_ARGS%

    - name: Configure the CMake Project (Linux/macOS)
      if: ${{ runner.os == 'Linux' || runner.os == 'macOS' }}
      shell: bash
      run: |
        WORKING_DIRECTORY="${{ inputs.working-directory }}"
        CMAKE_ARGS="${{ steps.cmake-args.outputs.CMAKE_ARGS }}"

        echo "Changing Directory..."
        echo ""
        echo "cd ${WORKING_DIRECTORY}"
        echo ""
        cd "${WORKING_DIRECTORY}"

        echo "Configuring the CMake Project..."
        echo ""
        echo "cmake ${CMAKE_ARGS[@]}"
        echo ""
        cmake ${CMAKE_ARGS[@]}
